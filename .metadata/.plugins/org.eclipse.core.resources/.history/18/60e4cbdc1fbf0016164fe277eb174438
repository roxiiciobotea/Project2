Bursa online

-GENERAL-

The application consists of a set of components (java classes), as follows:
- a set of event producers & consumers
- a dispatcher implemented as an event loop or as a separate service (a class featuring methods as sendEvent(type, source)). 
- the dispatcher will provide methods like registerListener(type, class) which can be used by classes that need to register as event consumers.
Events have a type attribute, represented through an identifier (character string), and consumers will register to the dispatcher by specifiyng the type of 
events they are interested in,.
A class may be interested in more than one event types.

The events generated by producers are sent to the dispatcher, which in turn sends them to the classes interested in the respective event types.

The code that deals with the receipt and dispatching of events (the dispatcher) must be independent in design and concept from the particular 
specification of the project. (It must be reusable in other projects)

-SPECIFIC-

Sistemul ofera suport pentru gestionarea unei burse si este scris orientat pe evenimente. 

Un eveniment este aparitia unei oferte, modificarea ei, aparitia unui buyer pentru o oferta etc.

Actorii din sistem (bidders, buyers) genereaza evenimente si se inregistreaza la evenimentele pe care le considera de interes. 
Spre exemplu, un posibil buyer se va abona pentru a vedea in timp real ofertele bidder-ilor de care este interesat.

Un bidder trebuie sa poata afla in timp real daca un buyer este interesat de oferta sa. Pentru aceasta, bidders se pot declara interesati de aparitia
unui eveniment de tip "oferta citita" si pot specifica filtre suplimentare (cum ar fi data minima de la care sunt interesati de eveniment, valoarea minima 
oferita de buyer etc.) 

In general, consumatorii de evenimente pot specifica filtre complexe pentru a realiza abonarea: un buyer poate preciza, de exemplu,
care sunt intervalele de pret in care ofertele de la bidder-ii alesi devin interesante, vechimea maxima a ofertelor etc.